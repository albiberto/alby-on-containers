@page "/categories"
@using ProductDataManager.Exstensions
@rendermode InteractiveServer

<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<PageTitle>Categories</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Categories</MudText>

<div class="d-flex flex-row-reverse">
    <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Add" OnClick="() => AddCategoryAsync()">Add</MudButton>
    <MudTextField @bind-Value="@filter" HelperText="Filter by category name" Label="Normal" Variant="Variant.Text" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search"/>
</div>

<MudTreeView Items="@Forest" Dense="true" Hover="true" ExpandOnClick="true" MultiSelection="true">
    <ItemTemplate>
        <MudTreeViewItem
            @bind-Expanded="@context.IsExpanded"
            Items="@context.Items.OrderBy(i => i.Name).ToHashSet()">

            <Content>
                <div class="d-flex flex-row" style="width: 100%">

                    <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChild"/>
                    <MudTextField @bind-Value="@context.Name" Label="Category Name" Variant="Variant.Text"/>
                    <MudTextField @bind-Value="@context.Description" Label="Description" Variant="Variant.Text"/>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mr-2" StartIcon="@Icons.Material.Outlined.Add" OnClick="@(() => AddCategoryAsync(context.Id))">Add</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Class="mr-2" StartIcon="@Icons.Material.Outlined.Save" OnClick="@(() => UpdateCategoryAsync(context))">Save</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Delete" OnClick="@(() => DeleteAsync(context))">Delete</MudButton>
                </div>
            </Content>
        </MudTreeViewItem>
    </ItemTemplate>
</MudTreeView>